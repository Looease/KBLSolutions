(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1593610617680;

	const files = [
		"service-worker-index.html",
		".DS_Store",
		"anchor.css",
		"bandw.jpg",
		"css/.DS_Store",
		"css/bootstrap.css",
		"css/bootstrap.css.map",
		"css/responsive.css",
		"css/responsive.css.map",
		"css/ui.css",
		"css/ui.css.map",
		"favicon.png",
		"fonts/.DS_Store",
		"fonts/fontawesome/.DS_Store",
		"fonts/fontawesome/css/.DS_Store",
		"fonts/fontawesome/css/all.min.css",
		"fonts/fontawesome/webfonts/.DS_Store",
		"fonts/fontawesome/webfonts/fa-brands-400.woff",
		"fonts/fontawesome/webfonts/fa-solid-900.woff",
		"img/.DS_Store",
		"img/bag.jpg",
		"img/blurred.jpg",
		"img/favicon.ico",
		"img/logo.png",
		"img/shopping.jpeg",
		"img/sign/.DS_Store",
		"img/sign/aboard/.DS_Store",
		"img/sign/aboard/0.jpg",
		"img/sign/aboard/1.jpg",
		"img/sign/aboard/2.jpg",
		"img/sign/aboard/3.jpg",
		"img/sign/aboard/4.jpg",
		"img/sign/compact/.DS_Store",
		"img/sign/compact/41.jpg",
		"img/sign/compact/42.jpg",
		"img/sign/compact/43.jpg",
		"img/sign/compact/44.jpg",
		"img/sign/covid/.DS_Store",
		"img/sign/covid/46.jpg",
		"img/sign/covid/47.jpg",
		"img/sign/covid/48.jpg",
		"img/sign/covid/49.jpg",
		"img/sign/covid/50.jpg",
		"img/sign/covid/51.jpg",
		"img/sign/covid/52.jpg",
		"img/sign/covid/53.jpg",
		"img/sign/covid/54.jpg",
		"img/sign/covid/55.jpg",
		"img/sign/covid/56.jpg",
		"img/sign/forecourt/.DS_Store",
		"img/sign/forecourt/16.jpg",
		"img/sign/forecourt/17.jpg",
		"img/sign/forecourt/18.jpg",
		"img/sign/forecourt/19.jpg",
		"img/sign/forecourt/20.jpg",
		"img/sign/forecourt/21.jpg",
		"img/sign/forecourt/22.jpg",
		"img/sign/forecourt/23.jpg",
		"img/sign/forecourt/24.jpg",
		"img/sign/forecourt/25.jpg",
		"img/sign/forecourt/26.jpg",
		"img/sign/forecourt/27.jpg",
		"img/sign/forecourt/28.jpg",
		"img/sign/forecourt/29.jpg",
		"img/sign/forecourt/2930.jpg",
		"img/sign/illuminated/.DS_Store",
		"img/sign/illuminated/45.jpg",
		"img/sign/lockposter/.DS_Store",
		"img/sign/lockposter/10.jpg",
		"img/sign/lockposter/11.jpg",
		"img/sign/lockposter/12.jpg",
		"img/sign/lockposter/13.jpg",
		"img/sign/lockposter/14.jpg",
		"img/sign/lockposter/15.jpg",
		"img/sign/lockposter/5.jpg",
		"img/sign/lockposter/7.jpg",
		"img/sign/lockposter/8.jpg",
		"img/sign/lockposter/9.jpg",
		"img/sign/menu/.DS_Store",
		"img/sign/menu/31.jpg",
		"img/sign/menu/32.jpg",
		"img/sign/menu/33.jpg",
		"img/sign/menu/34.jpg",
		"img/sign/menu/4.jpg",
		"img/sign/snap/.DS_Store",
		"img/sign/snap/35.jpg",
		"img/sign/snap/36.jpg",
		"img/sign/snap/38.jpg",
		"img/sign/snap/39.jpg",
		"img/sign/snap/40.jpg",
		"img/window.jpg",
		"js/.DS_Store",
		"js/LICENSE",
		"js/bootstrap.bundle.min.js",
		"js/jquery-2.0.0.min.js",
		"js/script.js",
		"logo-192.png",
		"logo-512.png",
		"manifest.json",
		"style.css",
		"successkid.jpg"
	];

	const shell = [
		"client/client.d0bc9304.js",
		"client/testimonials.020daba1.js",
		"client/index.8d6467f2.js",
		"client/[slug].ac331261.js",
		"client/[slug].81ed4178.js",
		"client/about.61cab723.js",
		"client/[slug].56c19fdd.js",
		"client/sapper-dev-client.1e7a4a5e.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const cached = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		if (!url.protocol.startsWith('http')) return;

		// ignore dev server requests
		if (url.hostname === self.location.hostname && url.port !== self.location.port) return;

		// always serve static files and bundler-generated assets from cache
		if (url.host === self.location.host && cached.has(url.pathname)) {
			event.respondWith(caches.match(event.request));
			return;
		}

		// for pages, you might want to serve a shell `service-worker-index.html` file,
		// which Sapper has generated for you. It's not right for every
		// app, but if it's right for yours then uncomment this section
		/*
		if (url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
			event.respondWith(caches.match('/service-worker-index.html'));
			return;
		}
		*/

		if (event.request.cache === 'only-if-cached') return;

		// for everything else, try the network first, falling back to
		// cache if the user is offline. (If the pages never change, you
		// might prefer a cache-first approach to a network-first one.)
		event.respondWith(
			caches
				.open(`offline${timestamp}`)
				.then(async cache => {
					try {
						const response = await fetch(event.request);
						cache.put(event.request, response.clone());
						return response;
					} catch(err) {
						const response = await cache.match(event.request);
						if (response) return response;

						throw err;
					}
				})
		);
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
